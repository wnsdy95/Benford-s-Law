{"ast":null,"code":"var _jsxFileName = \"/Users/ohsu/Desktop/benford/Benford-s-Law/src/components/Histogram.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Histogram.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Histogram = ({\n  data\n}) => {\n  _s();\n  const [distribution, setDistribution] = useState([]);\n  const svgRef = useRef(null);\n  const width = 500;\n  const height = 300;\n  const margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n  const y = d3.scaleBand().domain([1, 2, 3, 4, 5, 6, 7, 8, 9]) // Leading digits 1-9\n  .range([margin.top, height - margin.bottom]) // Adjusted the range\n  .padding(0.1);\n  const x = d3.scaleLinear().domain([0, d3.max(distribution)]).nice().rangeRound([margin.left, width - margin.right]);\n  function computeBenfordDistribution(data) {\n    const totalCount = data.length;\n    const distribution = Array(9).fill(0);\n    data.forEach(value => {\n      const leadingDigit = parseInt(String(value)[0]);\n      if (leadingDigit > 0) {\n        distribution[leadingDigit - 1] += 1;\n      }\n    });\n    return distribution.map(count => count / totalCount);\n  }\n  function idealBenfordDistribution() {\n    return [0.301, 0.176, 0.125, 0.097, 0.079, 0.067, 0.058, 0.051, 0.046];\n  }\n  useEffect(() => {\n    if (data.length) {\n      const benfordDistribution = computeBenfordDistribution(data);\n      setDistribution(benfordDistribution);\n    }\n  }, [data]);\n  useEffect(() => {\n    if (distribution.length) {\n      const svg = d3.select(svgRef.current);\n      svg.selectAll(\"*\").remove(); // Clear previous rendering\n\n      svg.attr(\"width\", width).attr(\"height\", height);\n\n      // Bars with animation\n      svg.selectAll(\"rect\").data(distribution).enter().append(\"rect\").attr(\"x\", margin.left).attr(\"y\", (d, i) => y(i + 1)).attr(\"width\", d => 0) // Initial width set to 0 for animation\n      .attr(\"height\", y.bandwidth()).attr(\"fill\", \"steelblue\").transition() // Apply animation to bars\n      .duration(1000) // Duration of the animation (in milliseconds)\n      .attr(\"width\", d => x(d) - margin.left);\n\n      // Add percentages to the right of each bar\n      svg.selectAll(\".percentage-label\").data(distribution).enter().append(\"text\").attr(\"class\", \"percentage-label\").attr(\"x\", d => x(d) + 5) // Adjust position as needed\n      .attr(\"y\", (d, i) => y(i + 1) + y.bandwidth() / 2).attr(\"dy\", \"0.35em\").style(\"text-anchor\", \"start\").text(d => d3.format(\".1%\")(d));\n\n      // Add dots to Benford's Law line\n      svg.selectAll(\".benford-dot\").data(idealBenfordDistribution()).enter().append(\"circle\").attr(\"class\", \"benford-dot\").attr(\"cx\", d => x(d)).attr(\"cy\", (d, i) => y(i + 1) + y.bandwidth() / 2).attr(\"r\", 3).attr(\"fill\", \"red\");\n\n      // X-axis\n      svg.append(\"g\").attr(\"transform\", `translate(0, ${height - margin.bottom})`).call(d3.axisBottom(x).ticks(10, \"%\"));\n    }\n  }, [distribution]);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove(); // Clear previous rendering\n\n    svg.attr(\"width\", width).attr(\"height\", height);\n\n    // X-axis (empty)\n    svg.append(\"g\").attr(\"transform\", `translate(0, ${height - margin.bottom})`).call(d3.axisBottom(x).ticks(10, \"%\"));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 10\n  }, this);\n};\n_s(Histogram, \"CASR4gLRTbhj6v+O0dLu2zBekaQ=\");\n_c = Histogram;\nexport default Histogram;\nvar _c;\n$RefreshReg$(_c, \"Histogram\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","jsxDEV","_jsxDEV","Histogram","data","_s","distribution","setDistribution","svgRef","width","height","margin","top","right","bottom","left","y","scaleBand","domain","range","padding","x","scaleLinear","max","nice","rangeRound","computeBenfordDistribution","totalCount","length","Array","fill","forEach","value","leadingDigit","parseInt","String","map","count","idealBenfordDistribution","benfordDistribution","svg","select","current","selectAll","remove","attr","enter","append","d","i","bandwidth","transition","duration","style","text","format","call","axisBottom","ticks","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ohsu/Desktop/benford/Benford-s-Law/src/components/Histogram.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Histogram.css\";\n\nconst Histogram = ({ data }) => {\n  const [distribution, setDistribution] = useState([]);\n  const svgRef = useRef(null);\n\n  const width = 500;\n  const height = 300;\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n\n  const y = d3\n    .scaleBand()\n    .domain([1, 2, 3, 4, 5, 6, 7, 8, 9]) // Leading digits 1-9\n    .range([margin.top, height - margin.bottom]) // Adjusted the range\n    .padding(0.1);\n\n  const x = d3\n    .scaleLinear()\n    .domain([0, d3.max(distribution)])\n    .nice()\n    .rangeRound([margin.left, width - margin.right]);\n\n  function computeBenfordDistribution(data) {\n    const totalCount = data.length;\n    const distribution = Array(9).fill(0);\n\n    data.forEach((value) => {\n      const leadingDigit = parseInt(String(value)[0]);\n      if (leadingDigit > 0) {\n        distribution[leadingDigit - 1] += 1;\n      }\n    });\n\n    return distribution.map((count) => count / totalCount);\n  }\n\n  function idealBenfordDistribution() {\n    return [0.301, 0.176, 0.125, 0.097, 0.079, 0.067, 0.058, 0.051, 0.046];\n  }\n\n  useEffect(() => {\n    if (data.length) {\n      const benfordDistribution = computeBenfordDistribution(data);\n      setDistribution(benfordDistribution);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (distribution.length) {\n      const svg = d3.select(svgRef.current);\n\n      svg.selectAll(\"*\").remove(); // Clear previous rendering\n\n      svg.attr(\"width\", width).attr(\"height\", height);\n\n      // Bars with animation\n      svg\n        .selectAll(\"rect\")\n        .data(distribution)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", margin.left)\n        .attr(\"y\", (d, i) => y(i + 1))\n        .attr(\"width\", (d) => 0) // Initial width set to 0 for animation\n        .attr(\"height\", y.bandwidth())\n        .attr(\"fill\", \"steelblue\")\n        .transition() // Apply animation to bars\n        .duration(1000) // Duration of the animation (in milliseconds)\n        .attr(\"width\", (d) => x(d) - margin.left);\n\n      // Add percentages to the right of each bar\n      svg\n        .selectAll(\".percentage-label\")\n        .data(distribution)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"percentage-label\")\n        .attr(\"x\", (d) => x(d) + 5) // Adjust position as needed\n        .attr(\"y\", (d, i) => y(i + 1) + y.bandwidth() / 2)\n        .attr(\"dy\", \"0.35em\")\n        .style(\"text-anchor\", \"start\")\n        .text((d) => d3.format(\".1%\")(d));\n\n      // Add dots to Benford's Law line\n      svg\n        .selectAll(\".benford-dot\")\n        .data(idealBenfordDistribution())\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"benford-dot\")\n        .attr(\"cx\", (d) => x(d))\n        .attr(\"cy\", (d, i) => y(i + 1) + y.bandwidth() / 2)\n        .attr(\"r\", 3)\n        .attr(\"fill\", \"red\");\n\n      // X-axis\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n        .call(d3.axisBottom(x).ticks(10, \"%\"));\n    }\n  }, [distribution]);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    svg.selectAll(\"*\").remove(); // Clear previous rendering\n\n    svg.attr(\"width\", width).attr(\"height\", height);\n\n    // X-axis (empty)\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n      .call(d3.axisBottom(x).ticks(10, \"%\"));\n  }, []);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default Histogram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}