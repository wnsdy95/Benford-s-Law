{"ast":null,"code":"//selecting all required elements\nconst dropArea = document.querySelector(\".drag-area\"),\n  dragText = dropArea.querySelector(\"header\"),\n  button = dropArea.querySelector(\"button\"),\n  input = dropArea.querySelector(\"input\");\nlet file; //this is a global variable and we'll use it inside multiple functions\nbutton.onclick = () => {\n  input.click(); //if user click on the button then the input also clicked\n};\n\ninput.addEventListener(\"change\", function () {\n  //getting user select file and [0] this means if user select multiple files then we'll select only the first one\n  file = this.files[0];\n  dropArea.classList.add(\"active\");\n  showFile(); //calling function\n});\n//If user Drag File Over DropArea\ndropArea.addEventListener(\"dragover\", event => {\n  event.preventDefault(); //preventing from default behaviour\n  dropArea.classList.add(\"active\");\n  dragText.textContent = \"Release to Upload File\";\n});\n//If user leave dragged File from DropArea\ndropArea.addEventListener(\"dragleave\", () => {\n  dropArea.classList.remove(\"active\");\n  dragText.textContent = \"Drag & Drop to Upload File\";\n});\n//If user drop File on DropArea\ndropArea.addEventListener(\"drop\", event => {\n  event.preventDefault(); //preventing from default behaviour\n  //getting user select file and [0] this means if user select multiple files then we'll select only the first one\n  file = event.dataTransfer.files[0];\n  showFile(); //calling function\n});\n\nfunction showFile() {\n  let fileType = file.type; //getting selected file type\n  let validExtensions = [\"image/jpeg\", \"image/jpg\", \"image/png\"]; //adding some valid image extensions in array\n  if (validExtensions.includes(fileType)) {\n    //if user selected file is an image file\n    let fileReader = new FileReader(); //creating new FileReader object\n    fileReader.onload = () => {\n      let fileURL = fileReader.result; //passing user file source in fileURL variable\n      // UNCOMMENT THIS BELOW LINE. I GOT AN ERROR WHILE UPLOADING THIS POST SO I COMMENTED IT\n      // let imgTag = `<img src=\"${fileURL}\" alt=\"image\">`; //creating an img tag and passing user selected file source inside src attribute\n      dropArea.innerHTML = imgTag; //adding that created img tag inside dropArea container\n    };\n\n    fileReader.readAsDataURL(file);\n  } else {\n    alert(\"This is not an Image File!\");\n    dropArea.classList.remove(\"active\");\n    dragText.textContent = \"Drag & Drop to Upload File\";\n  }\n}","map":{"version":3,"names":["dropArea","document","querySelector","dragText","button","input","file","onclick","click","addEventListener","files","classList","add","showFile","event","preventDefault","textContent","remove","dataTransfer","fileType","type","validExtensions","includes","fileReader","FileReader","onload","fileURL","result","innerHTML","imgTag","readAsDataURL","alert"],"sources":["E:/Projects/Benford's_Law/Benford-s-Law/src/components/Drag_Drop.js"],"sourcesContent":["//selecting all required elements\r\nconst dropArea = document.querySelector(\".drag-area\"),\r\n\tdragText = dropArea.querySelector(\"header\"),\r\n\tbutton = dropArea.querySelector(\"button\"),\r\n\tinput = dropArea.querySelector(\"input\");\r\nlet file; //this is a global variable and we'll use it inside multiple functions\r\nbutton.onclick = ()=>{\r\n\tinput.click(); //if user click on the button then the input also clicked\r\n}\r\ninput.addEventListener(\"change\", function(){\r\n\t//getting user select file and [0] this means if user select multiple files then we'll select only the first one\r\n\tfile = this.files[0];\r\n\tdropArea.classList.add(\"active\");\r\n\tshowFile(); //calling function\r\n});\r\n//If user Drag File Over DropArea\r\ndropArea.addEventListener(\"dragover\", (event)=>{\r\n\tevent.preventDefault(); //preventing from default behaviour\r\n\tdropArea.classList.add(\"active\");\r\n\tdragText.textContent = \"Release to Upload File\";\r\n});\r\n//If user leave dragged File from DropArea\r\ndropArea.addEventListener(\"dragleave\", ()=>{\r\n\tdropArea.classList.remove(\"active\");\r\n\tdragText.textContent = \"Drag & Drop to Upload File\";\r\n});\r\n//If user drop File on DropArea\r\ndropArea.addEventListener(\"drop\", (event)=>{\r\n\tevent.preventDefault(); //preventing from default behaviour\r\n\t//getting user select file and [0] this means if user select multiple files then we'll select only the first one\r\n\tfile = event.dataTransfer.files[0];\r\n\tshowFile(); //calling function\r\n});\r\nfunction showFile(){\r\n\tlet fileType = file.type; //getting selected file type\r\n\tlet validExtensions = [\"image/jpeg\", \"image/jpg\", \"image/png\"]; //adding some valid image extensions in array\r\n\tif(validExtensions.includes(fileType)){ //if user selected file is an image file\r\n\t\tlet fileReader = new FileReader(); //creating new FileReader object\r\n\t\tfileReader.onload = ()=>{\r\n\t\t\tlet fileURL = fileReader.result; //passing user file source in fileURL variable\r\n\t\t\t// UNCOMMENT THIS BELOW LINE. I GOT AN ERROR WHILE UPLOADING THIS POST SO I COMMENTED IT\r\n\t\t\t// let imgTag = `<img src=\"${fileURL}\" alt=\"image\">`; //creating an img tag and passing user selected file source inside src attribute\r\n\t\t\tdropArea.innerHTML = imgTag; //adding that created img tag inside dropArea container\r\n\t\t}\r\n\t\tfileReader.readAsDataURL(file);\r\n\t}else{\r\n\t\talert(\"This is not an Image File!\");\r\n\t\tdropArea.classList.remove(\"active\");\r\n\t\tdragText.textContent = \"Drag & Drop to Upload File\";\r\n\t}\r\n}"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;EACpDC,QAAQ,GAAGH,QAAQ,CAACE,aAAa,CAAC,QAAQ,CAAC;EAC3CE,MAAM,GAAGJ,QAAQ,CAACE,aAAa,CAAC,QAAQ,CAAC;EACzCG,KAAK,GAAGL,QAAQ,CAACE,aAAa,CAAC,OAAO,CAAC;AACxC,IAAII,IAAI,CAAC,CAAC;AACVF,MAAM,CAACG,OAAO,GAAG,MAAI;EACpBF,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC;;AACDH,KAAK,CAACI,gBAAgB,CAAC,QAAQ,EAAE,YAAU;EAC1C;EACAH,IAAI,GAAG,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;EACpBV,QAAQ,CAACW,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;EAChCC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC;AACF;AACAb,QAAQ,CAACS,gBAAgB,CAAC,UAAU,EAAGK,KAAK,IAAG;EAC9CA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;EACxBf,QAAQ,CAACW,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;EAChCT,QAAQ,CAACa,WAAW,GAAG,wBAAwB;AAChD,CAAC,CAAC;AACF;AACAhB,QAAQ,CAACS,gBAAgB,CAAC,WAAW,EAAE,MAAI;EAC1CT,QAAQ,CAACW,SAAS,CAACM,MAAM,CAAC,QAAQ,CAAC;EACnCd,QAAQ,CAACa,WAAW,GAAG,4BAA4B;AACpD,CAAC,CAAC;AACF;AACAhB,QAAQ,CAACS,gBAAgB,CAAC,MAAM,EAAGK,KAAK,IAAG;EAC1CA,KAAK,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;EACxB;EACAT,IAAI,GAAGQ,KAAK,CAACI,YAAY,CAACR,KAAK,CAAC,CAAC,CAAC;EAClCG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC;;AACF,SAASA,QAAQA,CAAA,EAAE;EAClB,IAAIM,QAAQ,GAAGb,IAAI,CAACc,IAAI,CAAC,CAAC;EAC1B,IAAIC,eAAe,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;EAChE,IAAGA,eAAe,CAACC,QAAQ,CAACH,QAAQ,CAAC,EAAC;IAAE;IACvC,IAAII,UAAU,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC,CAAC;IACnCD,UAAU,CAACE,MAAM,GAAG,MAAI;MACvB,IAAIC,OAAO,GAAGH,UAAU,CAACI,MAAM,CAAC,CAAC;MACjC;MACA;MACA3B,QAAQ,CAAC4B,SAAS,GAAGC,MAAM,CAAC,CAAC;IAC9B,CAAC;;IACDN,UAAU,CAACO,aAAa,CAACxB,IAAI,CAAC;EAC/B,CAAC,MAAI;IACJyB,KAAK,CAAC,4BAA4B,CAAC;IACnC/B,QAAQ,CAACW,SAAS,CAACM,MAAM,CAAC,QAAQ,CAAC;IACnCd,QAAQ,CAACa,WAAW,GAAG,4BAA4B;EACpD;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}