{"ast":null,"code":"var _jsxFileName = \"/Users/ohsu/Desktop/benford/Benford-s-Law/src/components/Histogram.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Histogram.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Histogram = ({\n  data\n}) => {\n  _s();\n  const [distribution, setDistribution] = useState([]);\n  const svgRef = useRef(null);\n  const width = 500;\n  const height = 300;\n  const margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 40\n  };\n  const colorScale = d3.scaleLinear().domain([1, 9]) // Assuming you have 9 categories\n  .range([\"#ff0000\", \"#0000ff\"]);\n  const y = d3.scaleBand().domain([1, 2, 3, 4, 5, 6, 7, 8, 9]) // Leading digits 1-9\n  .range([margin.top, height - margin.bottom]) // Adjusted the range\n  .padding(0.1);\n  const x = d3.scaleLinear().domain([0, d3.max(distribution)]).nice().rangeRound([margin.left, width - margin.right]);\n  function computeBenfordDistribution(data) {\n    const totalCount = data.length;\n    const distribution = Array(9).fill(0);\n    data.forEach(value => {\n      const leadingDigit = parseInt(String(value)[0]);\n      if (leadingDigit > 0) {\n        distribution[leadingDigit - 1] += 1;\n      }\n    });\n    return distribution.map(count => count / totalCount);\n  }\n  function idealBenfordDistribution() {\n    return [0.301, 0.176, 0.125, 0.097, 0.079, 0.067, 0.058, 0.051, 0.046];\n  }\n  useEffect(() => {\n    if (data.length) {\n      const benfordDistribution = computeBenfordDistribution(data);\n      setDistribution(benfordDistribution);\n    }\n  }, [data]);\n  useEffect(() => {\n    if (distribution.length) {\n      const svg = d3.select(svgRef.current);\n      svg.selectAll(\"*\").remove(); // Clear previous rendering\n\n      svg.attr(\"width\", width).attr(\"height\", height);\n\n      // Bars with animation\n      svg.selectAll(\"rect\").data(distribution).enter().append(\"rect\").attr(\"x\", margin.left).attr(\"y\", (d, i) => y(i + 1)).attr(\"width\", d => 0) // Initial width set to 0 for animation\n      .attr(\"height\", y.bandwidth()).attr(\"fill\", (_, i) => colorScale(i)).transition() // Apply animation to bars\n      .duration(1000) // Duration of the animation (in milliseconds)\n      .attr(\"width\", d => x(d) - margin.left);\n\n      // Add percentages to the right of each bar\n      svg.selectAll(\".percentage-label\").data(distribution).enter().append(\"text\").attr(\"class\", \"percentage-label\").attr(\"x\", d => x(d) + 5) // Adjust position as needed\n      .attr(\"y\", (d, i) => y(i + 1) + y.bandwidth() / 2).attr(\"dy\", \"0.35em\").style(\"text-anchor\", \"start\").text(d => d3.format(\".1%\")(d));\n\n      // Add numbers on the left of each bar\n      svg.selectAll(\".bar-label\").data(distribution).enter().append(\"text\").attr(\"class\", \"bar-label\").attr(\"x\", margin.left - 5) // Adjust position as needed\n      .attr(\"y\", (d, i) => y(i + 1) + y.bandwidth() / 2).attr(\"dy\", \"0.35em\").style(\"text-anchor\", \"end\").text((d, i) => i + 1); // Display the numbers 1 to 9\n\n      // Add dots to Benford's Law line\n      svg.selectAll(\".benford-dot\").data(idealBenfordDistribution()).enter().append(\"circle\").attr(\"class\", \"benford-dot\").attr(\"cx\", d => x(d)).attr(\"cy\", (d, i) => y(i + 1) + y.bandwidth() / 2).attr(\"r\", 3).attr(\"fill\", \"red\");\n\n      // X-axis\n      svg.append(\"g\").attr(\"transform\", `translate(0, ${height - margin.bottom})`).call(d3.axisBottom(x).ticks(10, \"%\")).call(d3.axisLeft(x).tickSize(0));\n    }\n  }, [distribution]);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove(); // Clear previous rendering\n\n    svg.attr(\"width\", width).attr(\"height\", height);\n\n    // X-axis (empty)\n    // svg\n    //   .append(\"g\")\n    //   .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n    //   .call(d3.axisBottom(x).ticks(10, \"%\"))\n    //   .call(d3.axisLeft(x).tickSize(0));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 10\n  }, this);\n};\n_s(Histogram, \"CASR4gLRTbhj6v+O0dLu2zBekaQ=\");\n_c = Histogram;\nexport default Histogram;\nvar _c;\n$RefreshReg$(_c, \"Histogram\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","jsxDEV","_jsxDEV","Histogram","data","_s","distribution","setDistribution","svgRef","width","height","margin","top","right","bottom","left","colorScale","scaleLinear","domain","range","y","scaleBand","padding","x","max","nice","rangeRound","computeBenfordDistribution","totalCount","length","Array","fill","forEach","value","leadingDigit","parseInt","String","map","count","idealBenfordDistribution","benfordDistribution","svg","select","current","selectAll","remove","attr","enter","append","d","i","bandwidth","_","transition","duration","style","text","format","call","axisBottom","ticks","axisLeft","tickSize","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ohsu/Desktop/benford/Benford-s-Law/src/components/Histogram.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Histogram.css\";\n\nconst Histogram = ({ data }) => {\n  const [distribution, setDistribution] = useState([]);\n  const svgRef = useRef(null);\n\n  const width = 500;\n  const height = 300;\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n\n  const colorScale = d3.scaleLinear()\n    .domain([1, 9])  // Assuming you have 9 categories\n    .range([\"#ff0000\", \"#0000ff\"]);\n  const y = d3\n    .scaleBand()\n    .domain([1, 2, 3, 4, 5, 6, 7, 8, 9]) // Leading digits 1-9\n    .range([margin.top, height - margin.bottom]) // Adjusted the range\n    .padding(0.1);\n\n  const x = d3\n    .scaleLinear()\n    .domain([0, d3.max(distribution)])\n    .nice()\n    .rangeRound([margin.left, width - margin.right]);\n\n  function computeBenfordDistribution(data) {\n    const totalCount = data.length;\n    const distribution = Array(9).fill(0);\n\n    data.forEach((value) => {\n      const leadingDigit = parseInt(String(value)[0]);\n      if (leadingDigit > 0) {\n        distribution[leadingDigit - 1] += 1;\n      }\n    });\n\n    return distribution.map((count) => count / totalCount);\n  }\n\n  function idealBenfordDistribution() {\n    return [0.301, 0.176, 0.125, 0.097, 0.079, 0.067, 0.058, 0.051, 0.046];\n  }\n\n  useEffect(() => {\n    if (data.length) {\n      const benfordDistribution = computeBenfordDistribution(data);\n      setDistribution(benfordDistribution);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (distribution.length) {\n      const svg = d3.select(svgRef.current);\n\n      svg.selectAll(\"*\").remove(); // Clear previous rendering\n\n      svg.attr(\"width\", width).attr(\"height\", height);\n\n      // Bars with animation\n      svg\n        .selectAll(\"rect\")\n        .data(distribution)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", margin.left)\n        .attr(\"y\", (d, i) => y(i + 1))\n        .attr(\"width\", (d) => 0) // Initial width set to 0 for animation\n        .attr(\"height\", y.bandwidth())\n        .attr(\"fill\", (_, i) => colorScale(i))\n        .transition() // Apply animation to bars\n        .duration(1000) // Duration of the animation (in milliseconds)\n        .attr(\"width\", (d) => x(d) - margin.left);\n\n      // Add percentages to the right of each bar\n      svg\n        .selectAll(\".percentage-label\")\n        .data(distribution)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"percentage-label\")\n        .attr(\"x\", (d) => x(d) + 5) // Adjust position as needed\n        .attr(\"y\", (d, i) => y(i + 1) + y.bandwidth() / 2)\n        .attr(\"dy\", \"0.35em\")\n        .style(\"text-anchor\", \"start\")\n        .text((d) => d3.format(\".1%\")(d));\n\n      // Add numbers on the left of each bar\n      svg\n        .selectAll(\".bar-label\")\n        .data(distribution)\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", \"bar-label\")\n        .attr(\"x\", margin.left - 5) // Adjust position as needed\n        .attr(\"y\", (d, i) => y(i + 1) + y.bandwidth() / 2)\n        .attr(\"dy\", \"0.35em\")\n        .style(\"text-anchor\", \"end\")\n        .text((d, i) => i + 1); // Display the numbers 1 to 9\n\n      // Add dots to Benford's Law line\n      svg\n        .selectAll(\".benford-dot\")\n        .data(idealBenfordDistribution())\n        .enter()\n        .append(\"circle\")\n        .attr(\"class\", \"benford-dot\")\n        .attr(\"cx\", (d) => x(d))\n        .attr(\"cy\", (d, i) => y(i + 1) + y.bandwidth() / 2)\n        .attr(\"r\", 3)\n        .attr(\"fill\", \"red\");\n\n      // X-axis\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n        .call(d3.axisBottom(x).ticks(10, \"%\"))\n        .call(d3.axisLeft(x).tickSize(0));\n    } \n  }, [distribution]);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    svg.selectAll(\"*\").remove(); // Clear previous rendering\n\n    svg.attr(\"width\", width).attr(\"height\", height);\n\n    // X-axis (empty)\n    // svg\n    //   .append(\"g\")\n    //   .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\n    //   .call(d3.axisBottom(x).ticks(10, \"%\"))\n    //   .call(d3.axisLeft(x).tickSize(0));\n  }, []);\n\n  return <svg ref={svgRef}></svg>;\n};\n\nexport default Histogram;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}